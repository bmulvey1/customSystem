/*
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

results:
1/16/23 - 23270761 instructions

*/
asm
    {
    entry code
    code:
    call first4MFibs
    hlt
}
;

fun print(var value)
{
    // store r0, pull the argument into a register, then output that register
    asm {
		mov %rr, (%bp+8)
        int 5
    }
    ;
}

fun mod(var a, var divisor)
{
    while (a >= divisor)
    {
        a = a - divisor;
    }
    return a;
}

fun mul(var a, var b)
{
    var result = 0;
    if (a > b)
    {
        while (b > 0)
        {
            result = result + a;
            b = b - 1;
        }
    }
    else
    {
        while (a > 0)
        {
            result = result + b;
            a = a - 1;
        }
    }
    return result;
}

fun div(var a, var b)
{
    var quotient = 0;
    while (a >= b)
    {
        a = a - b;
        quotient = quotient + 1;
    }
    return quotient;
}

fun printNum(var num)
{
    var outStr[16];
    var digits = 1;
    if (num == 0)
    {
        outStr[0] = 48;
    }
    else
    {
        while (num > 0)
        {
            var remainder = mod(num, 10);
            outStr[digits] = remainder + 48;
            num = div(num, 10);
            digits = digits + 1;
        }
    }

    var i = 0;
    while (i < digits)
    {
        print(outStr[digits - i]);
        i = i + 1;
    }
    print(10); // newline
}


fun first4MFibs()
{
    var fibArr[50];
    fibArr[0] = 0;
    fibArr[1] = 1;
    var i = 2;
    // cheesy way to get 4M because we can't directly load numbers that large
    var threshold = 40000;
    threshold = mul(threshold, 100);

    while (fibArr[i - 1] < threshold)
    {
        fibArr[i] = fibArr[i - 2] + fibArr[i - 1];
        i = i + 1;
    }

    var j = 0;
    var sum = 0;
    while(j < i - 1)
    {
        var thisFib = fibArr[j];
        if(mod(thisFib, 2) == 0)
        {
            sum = sum + thisFib;
        }
        j = j + 1;
    }
    printNum(sum);
}

$$