/*
https://projecteuler.net/problem=1

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

results:
1/15/23 - 1196487 instructions

*/
asm
    {
    entry code
    code:
    call multiples
    hlt
}
;

fun print(var value)
{
    // store r0, pull the argument into a register, then output that register
    asm {
		mov %rr, (%bp+8)
        int 5
    }
    ;
}

fun mod(var a, var divisor)
{
    while (a >= divisor)
    {
        a = a - divisor;
    }
    return a;
}

fun mul(var a, var b)
{
    var result = 0;
    if (a > b)
    {
        while (b > 0)
        {
            result = result + a;
            b = b - 1;
        }
    }
    else
    {
        while (a > 0)
        {
            result = result + b;
            a = a - 1;
        }
    }
    return result;
}

fun div(var a, var b)
{
    var quotient = 0;
    while (a >= b)
    {
        a = a - b;
        quotient = quotient + 1;
    }
    return quotient;
}

fun printNum(var num)
{
    var outStr[16];
    var digits = 1;
    if (num == 0)
    {
        outStr[0] = 48;
    }
    else
    {
        while (num > 0)
        {
            var remainder = mod(num, 10);
            outStr[digits] = remainder + 48;
            num = div(num, 10);
            digits = digits + 1;
        }
    }

    var i = 0;
    while (i < digits)
    {
        print(outStr[digits - i]);
        i = i + 1;
    }
    print(10); // newline
}

fun multiples()
{
    var i = 1;
    var sum = 0;
    while (i < 1000)
    {
        if ((mod(i, 3) == 0))
        {
            sum = sum + i;
        }
        else if ((mod(i, 5) == 0))
        {
            sum = sum + i;
        }
        i = i + 1;
    }
    printNum(sum);
}

$$